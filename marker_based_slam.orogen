name "marker_based_slam"
version "0.1"

import_types_from "marker_based_slamTypes.hpp"
import_types_from "base"

using_library "marker_based_slam"


task_context "Task" do
    needs_configuration

    #TRUE if you have a known map
    property("known_map", "bool", false)

    #Full map address
    property("map_address", "std/string", "")

    #Transformation between the camera and the robot frame (cHr)
    #the translation parameters in meters and angular in degrees
    property("camera2robot", "marker_based_slam/PoseTransformation")

    #Transformation between the world and the marker frame (wHm)
    #the translation parameters in meters and angular in degrees
    property("world2marker", "marker_based_slam/PoseTransformation")


    #A vector of all detected markers in the current image frame
    input_port "marker_poses", "std/vector<base/samples/RigidBodyState>"
    
    #A vector of transformations between the markers and the reference marker
    #Group of markers that have no corelattion are build as a diffente map
    output_port "relative_poses", "std/vector<marker_based_slam/RelativeMarkerPoses>"

    #Camera's pose with respetc to the reference(s) marker(s)
    output_port "camera_pose",  "std/vector<marker_based_slam/MapPose>"
	
    port_driven "marker_poses"
end

